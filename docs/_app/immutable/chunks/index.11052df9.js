import{s as E,E as n,f as P,g as w,h as C,d as g,j as c,i as S,y as I,Q as b,b as D}from"./scheduler.b3f6e262.js";import{S as L,i as j}from"./index.92b29008.js";import{t as o}from"./2.d04437f6.js";function q(a){let t;return{c(){t=P("div"),this.h()},l(e){t=w(e,"DIV",{id:!0,class:!0,style:!0}),C(t).forEach(g),this.h()},h(){c(t,"id",a[2]),c(t,"class",a[0]),c(t,"style",a[1])},m(e,i){S(e,t,i)},p(e,[i]){i&4&&c(t,"id",e[2]),i&1&&c(t,"class",e[0]),i&2&&c(t,"style",e[1])},i:I,o:I,d(e){e&&g(t)}}}const _="particlesLoaded";function v(a,t,e){let{class:i=""}=t,{style:m=""}=t,{options:f={}}=t,{url:d=""}=t,{id:l="tsparticles"}=t,{particlesInit:u}=t;const y=b();let h=l;return D(async()=>{if(o.init(),u&&await u(o),h){const s=o.dom().find(r=>r.id===h);s&&s.destroy()}if(l){const s=x=>{y(_,{particles:x}),h=l};let r;if(d)r=await o.loadJSON(l,d);else if(f)r=await o.load(l,f);else{console.error("You must specify options or url to load tsParticles");return}s(r)}else y(_,{particles:void 0})}),a.$$set=s=>{"class"in s&&e(0,i=s.class),"style"in s&&e(1,m=s.style),"options"in s&&e(3,f=s.options),"url"in s&&e(4,d=s.url),"id"in s&&e(2,l=s.id),"particlesInit"in s&&e(5,u=s.particlesInit)},[i,m,l,f,d,u]}class J extends L{constructor(t){super(),j(this,t,v,q,E,{class:0,style:1,options:3,url:4,id:2,particlesInit:5})}get class(){return this.$$.ctx[0]}set class(t){this.$$set({class:t}),n()}get style(){return this.$$.ctx[1]}set style(t){this.$$set({style:t}),n()}get options(){return this.$$.ctx[3]}set options(t){this.$$set({options:t}),n()}get url(){return this.$$.ctx[4]}set url(t){this.$$set({url:t}),n()}get id(){return this.$$.ctx[2]}set id(t){this.$$set({id:t}),n()}get particlesInit(){return this.$$.ctx[5]}set particlesInit(t){this.$$set({particlesInit:t}),n()}}const U=J;export{U as default};
